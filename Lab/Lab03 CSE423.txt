


import math
from OpenGL.GL import *
from OpenGL.GLUT import *

from OpenGL.GLU import *


def draw_points(x, y):
    glPointSize(1) #pixel size. by default 1 thake
    glBegin(GL_POINTS)
    glColor3f(0.0, 1.0, 0.0)
    glVertex2f(x,y) #jekhane show korbe pixel
    glEnd()



def zone_one_to_every_zones_with_REAL_Origin(x, y, x0, y0):
    draw_points(x + x0 , y + y0)          #zone 1
    draw_points(y + x0 , x + y0)          #zone 0
    draw_points(y + x0 , -x + y0)         #zone 7
    draw_points(x + x0 , -y + y0)         #zone 6
    draw_points(-x + x0 , -y + y0)        #zone 5
    draw_points(-y + x0 , -x + y0)        #zone 4
    draw_points(-y + x0 , x + y0)         #zone 3
    draw_points(-x + x0 , y + y0)         #zone 2


def midpoint_Circle(x0, y0, r):
    d = 1 - r
    x = 0           # Assume Origin is (0,0)
    y = r
    zone_one_to_every_zones_with_REAL_Origin(x, y, x0, y0)
    while x < y:
      if d < 0:
        d += (2*x) + 3
        x += 1
      else:
        d += (2*x) - (2*y) + 5
        x += 1
        y -= 1
      zone_one_to_every_zones_with_REAL_Origin(x, y, x0, y0)


def REAL_Origin(x, y, r):
    midpoint_Circle(x, y, r)
    midpoint_Circle(x+(r/2), y, r/2)
    midpoint_Circle(x-(r/2), y, r/2)
    midpoint_Circle(x, y+(r/2), r/2)
    midpoint_Circle(x, y-(r/2), r/2)

    a= math.sin(math.radians(45))  * (r/2)       # a = math.sqrt(((r/2)**2)/2)  ##Only for eight circles
    #print(a)

    midpoint_Circle(x+a, y+a, r/2)
    #print(x+a, y+a, r/2)

    midpoint_Circle(x-a, y+a, r/2)
    #print(x-a, y+a, r/2)

    midpoint_Circle(x-a, y-a, r/2)
    #print(x-a, y-a, r/2)

    midpoint_Circle(x+a, y-a, r/2)
    #print(x+a, y-a, r/2)


def iterate():
    glViewport(0, 0, 500, 500)
    glMatrixMode(GL_PROJECTION)
    glLoadIdentity()
    glOrtho(0.0, 500, 0.0, 500, 0.0, 1.0)
    glMatrixMode (GL_MODELVIEW)
    glLoadIdentity()

def showScreen():
    glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
    glLoadIdentity()
    iterate()
    glColor3f(0.0, 1.0, 0.0) #konokichur color set (RGB)

    REAL_Origin(250, 250, 200)

    glutSwapBuffers()


glutInit()
glutInitDisplayMode(GLUT_RGBA)
glutInitWindowSize(500, 500) #window size
glutInitWindowPosition(0, 0)
wind = glutCreateWindow(b"OpenGL Coding Practice") #window name
glutDisplayFunc(showScreen)
glutMainLoop()